---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: resourcelocks.jobs.cerebras.com
spec:
  group: jobs.cerebras.com
  names:
    kind: ResourceLock
    listKind: ResourceLockList
    plural: resourcelocks
    shortNames:
    - rl
    singular: resourcelock
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.state
      name: Status
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: ResourceLock is the Schema for the resourcelock API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ResourceLockSpec defines the desired state of ResourceLock
            properties:
              groupResourceRequestUpperBounds:
                description: |-
                  ResourceRequestUpperBounds is the list of resources which the client wishes to reserve over the ResourceRequests.
                  Note: the logic here is optimized for Runtime services so it sacrifices some flexibility for simplicity.
                  Specifically, for each Replica type (corresponding to a ResourceRequest.Name), the desire of the client is to
                  reserve subresources >= the request for that replica type and that reservation should be the same across all
                  node groups, hence this field is not placed in the ResourceRequest.
                items:
                  properties:
                    name:
                      description: The name of the request.
                      minLength: 1
                      type: string
                    subresources:
                      additionalProperties:
                        type: integer
                      description: |-
                        Subresources are key value pairs which the requested resource must have. Subresources cannot end in _ as these
                        are reserved for internal use. Subresources are required.
                      minProperties: 1
                      type: object
                  required:
                  - name
                  - subresources
                  type: object
                type: array
              groupResourceRequests:
                description: GroupResourceRequests is the list of resources, grouped
                  by properties.group, which the client wishes to reserve.
                items:
                  description: |-
                    GroupResourceRequest is a group of ResourceRequests that must be matched against a set of resources belonging to the
                    same group. Groups are defined by the resource's property "group" which implements the concept of NodeGroup, e.g.
                    node.properties["group"] = "nodegroup0". Today, this is only implemented for nodes as they are the only resources
                    which have the group property, but any resource could potentially be grouped such as systems in the case that
                    racks of nodes should also be associated with a group of systems.
                    As an example, if you want to request a NodeGroup with 2 memx nodes and 1 worker node where all 3 are in the same
                    nodegroup, you'd add 2 ResourceRequests, one with type=node and properties=role-memory:true, count=2 and one with
                    type=node and properties=role-worker:true, count=1. The response appears in the groupResourceGrants field of the
                    LockStatus.
                  properties:
                    count:
                      description: |-
                        Count is the number of GroupResourceGrant responses to create for this GroupResourceRequest. Each response will
                        contain a list of resources which match the given requests.
                      minimum: 1
                      type: integer
                    name:
                      description: Name of the request. This must be unique amongst
                        all other GroupResourceRequest.
                      minLength: 1
                      type: string
                    resourceRequests:
                      items:
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is a map that contains miscellaneous information about the request.
                              For example, readable Id, targeted system and cs port.
                              Information from the annotations can be plumbed through all the way to pod spec in the end.
                            type: object
                          count:
                            description: Count is the number of resources requested
                              which match the given properties and subresources.
                            minimum: 1
                            type: integer
                          name:
                            description: |-
                              The name of the request. Must be unique within the request group since it will be used in the response to indicate
                              which request was satisfied.
                            minLength: 1
                            type: string
                          properties:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: |-
                              Properties are key values pairs where the requested resources must have at least one of the values listed in the
                              array. Properties cannot end in _ as these are reserved for internal use.
                              TODO: kubebuilder:validation:Pattern=^[^_]*$ would be nice to have but it doesn't work
                            type: object
                          subresources:
                            additionalProperties:
                              type: integer
                            description: |-
                              Subresources are key value pairs which the requested resource must have. Subresources cannot end in _ as these
                              are reserved for internal use. Subresources are required.
                              TODO: kubebuilder:validation:Pattern=^[^_]*$ would be nice to have but it doesn't work
                            minProperties: 1
                            type: object
                          type:
                            description: Type is the type of resource requested. Currently
                              only "system" and "node" are supported.
                            enum:
                            - system
                            - node
                            type: string
                        required:
                        - count
                        - name
                        - subresources
                        - type
                        type: object
                      minItems: 1
                      type: array
                  required:
                  - count
                  - name
                  - resourceRequests
                  type: object
                type: array
              nodeGroupRequests:
                description: 'Deprecated: Use GroupResourceRequests instead.'
                items:
                  properties:
                    name:
                      description: Name of the request. This must be unique amongst
                        all other NodeGroupRequests.
                      pattern: ([a-zA-Z0-9][a-zA-Z0-9-]{1,62})?[a-zA-Z0-9]
                      type: string
                    properties:
                      additionalProperties:
                        type: string
                      description: |-
                        Properties are some admin-defined characteristic of the NodeGroup such as
                        'memoryxMemory:1TB' or 'GPT3:true'.
                      type: object
                    replicas:
                      description: Replicas is the requested number of Groups with
                        the target properties
                      minimum: 1
                      type: integer
                  type: object
                type: array
              priority:
                description: Priority of the resource lock
                type: integer
              queueName:
                default: execute
                description: |-
                  QueueName is the name of the queue to which the client wishes to reserve resources. Empty string means the
                  default queue.
                enum:
                - compile
                - execute
                - prioritized-compile
                - prioritized-execute
                - reservation
                type: string
              resourceRequests:
                description: ResourceRequests is the list of resources which the client
                  wishes to reserve.
                items:
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: |-
                        Annotations is a map that contains miscellaneous information about the request.
                        For example, readable Id, targeted system and cs port.
                        Information from the annotations can be plumbed through all the way to pod spec in the end.
                      type: object
                    count:
                      description: Count is the number of resources requested which
                        match the given properties and subresources.
                      minimum: 1
                      type: integer
                    name:
                      description: |-
                        The name of the request. Must be unique within the request group since it will be used in the response to indicate
                        which request was satisfied.
                      minLength: 1
                      type: string
                    properties:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: |-
                        Properties are key values pairs where the requested resources must have at least one of the values listed in the
                        array. Properties cannot end in _ as these are reserved for internal use.
                        TODO: kubebuilder:validation:Pattern=^[^_]*$ would be nice to have but it doesn't work
                      type: object
                    subresources:
                      additionalProperties:
                        type: integer
                      description: |-
                        Subresources are key value pairs which the requested resource must have. Subresources cannot end in _ as these
                        are reserved for internal use. Subresources are required.
                        TODO: kubebuilder:validation:Pattern=^[^_]*$ would be nice to have but it doesn't work
                      minProperties: 1
                      type: object
                    type:
                      description: Type is the type of resource requested. Currently
                        only "system" and "node" are supported.
                      enum:
                      - system
                      - node
                      type: string
                  required:
                  - count
                  - name
                  - subresources
                  - type
                  type: object
                type: array
              systemRequests:
                description: |-
                  Deprecated: Use ResourceRequests instead.
                  SystemRequests is the list of types of systems the client wishes to reserve for exclusive use. Currently, this
                  list may only have a single member of type cs2 with replicas > 0.
                items:
                  properties:
                    properties:
                      additionalProperties:
                        type: string
                      description: |-
                        Properties are automatically set to characteristics of the System. Currently,
                        "name" is automatically set so to allow matching like name=systemf0,systemf1
                        which means "select where name is one of systemf0 or systemf1".
                      type: object
                    replicas:
                      description: Replicas is the number of systems of the given
                        type requested.
                      minimum: 1
                      type: integer
                    type:
                      default: cs2
                      description: The type of system requested. Allows `cs2` and
                        `other`. `other` is for test purposes.
                      enum:
                      - cs2
                      - other
                      type: string
                  type: object
                type: array
            type: object
          status:
            default:
              message: ""
              state: Pending
            description: ResourceLockStatus defines the observed state of ResourceLock
            properties:
              groupResourceGrantUpperBounds:
                description: ResourceGrant upper bound for each GroupResourceRequestUpperBound
                  in the spec.
                items:
                  properties:
                    name:
                      description: The name of the request.
                      minLength: 1
                      type: string
                    subresources:
                      additionalProperties:
                        type: integer
                      description: |-
                        Subresources are key value pairs which the requested resource must have. Subresources cannot end in _ as these
                        are reserved for internal use. Subresources are required.
                      minProperties: 1
                      type: object
                  required:
                  - name
                  - subresources
                  type: object
                type: array
              groupResourceGrants:
                description: |-
                  Granted resources for the requested resources. This is only set when the state is Granted. There are Count
                  entries for each GroupResourceRequest in the spec.
                items:
                  description: |-
                    GroupResourceGrant is a group of resources which belong to the same group. Each GroupResourceGrant corresponds to a
                    GroupResourceRequest where there are Count GroupResourceGrant responses for each GroupResourceRequest, each with a
                    unique groupingValue.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Extra metadata info on the grant result
                      type: object
                    groupingValue:
                      description: |-
                        GroupingValue is the value of the property "group" which all resources in this GroupResourceGrant have in common.
                        E.g. "nodegroup0" in the case where all the ResourceGrants share the group=nodegroup0 property.
                      type: string
                    name:
                      description: Name of the GroupResourceRequest corresponding
                        to this MatchList.
                      minLength: 1
                      type: string
                    resourceGrants:
                      items:
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is a map that contains metadata information about the request.
                              For example, readable Id, targeted system and cs port.
                              Information from the annotations can be plumbed through all the way to pod spec in the end.
                            type: object
                          name:
                            description: Name of the corresponding ResourceRequest.
                            minLength: 1
                            type: string
                          resources:
                            description: Resources which matched the corresponding
                              ResourceRequest.
                            items:
                              properties:
                                name:
                                  description: 'Name of the resource. Example: systemf99'
                                  minLength: 1
                                  type: string
                                subresourceRanges:
                                  additionalProperties:
                                    items:
                                      properties:
                                        end:
                                          format: int64
                                          type: integer
                                        start:
                                          format: int64
                                          type: integer
                                      type: object
                                    type: array
                                  description: Granted subresourceRanges
                                  type: object
                                subresources:
                                  additionalProperties:
                                    type: integer
                                  description: Granted subresources
                                  type: object
                                type:
                                  description: Type of the resource. Currently only
                                    `system` and `node` are supported.
                                  enum:
                                  - system
                                  - node
                                  type: string
                              required:
                              - name
                              - type
                              type: object
                            minItems: 1
                            type: array
                        required:
                        - name
                        - resources
                        type: object
                      type: array
                  required:
                  - groupingValue
                  - name
                  - resourceGrants
                  type: object
                type: array
              message:
                default: ""
                type: string
              nodeGroupGrants:
                description: 'Deprecated: refer to Grants instead.'
                items:
                  properties:
                    name:
                      description: Name of the node group request.
                      type: string
                    nodeGroups:
                      description: Names of the granted nodeGroups.
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              resourceGrants:
                description: Grants is the list of resources which were granted to
                  the client's corresponding ResourceRequests.
                items:
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: |-
                        Annotations is a map that contains metadata information about the request.
                        For example, readable Id, targeted system and cs port.
                        Information from the annotations can be plumbed through all the way to pod spec in the end.
                      type: object
                    name:
                      description: Name of the corresponding ResourceRequest.
                      minLength: 1
                      type: string
                    resources:
                      description: Resources which matched the corresponding ResourceRequest.
                      items:
                        properties:
                          name:
                            description: 'Name of the resource. Example: systemf99'
                            minLength: 1
                            type: string
                          subresourceRanges:
                            additionalProperties:
                              items:
                                properties:
                                  end:
                                    format: int64
                                    type: integer
                                  start:
                                    format: int64
                                    type: integer
                                type: object
                              type: array
                            description: Granted subresourceRanges
                            type: object
                          subresources:
                            additionalProperties:
                              type: integer
                            description: Granted subresources
                            type: object
                          type:
                            description: Type of the resource. Currently only `system`
                              and `node` are supported.
                            enum:
                            - system
                            - node
                            type: string
                        required:
                        - name
                        - type
                        type: object
                      minItems: 1
                      type: array
                  required:
                  - name
                  - resources
                  type: object
                type: array
              state:
                default: Pending
                enum:
                - Pending
                - Granted
                - Error
                type: string
              systemGrants:
                description: 'Deprecated: refer to Grants instead.'
                items:
                  properties:
                    name:
                      description: Name of the granted system.
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
