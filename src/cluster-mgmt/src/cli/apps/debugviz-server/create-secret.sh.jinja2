#!/usr/bin/env bash

SKIP_IF_INCREMENTAL=1

set -e

SCRIPT_PATH=$(dirname "$0")
cd "$SCRIPT_PATH"
source "../pkg-common.sh"

namespace="{{ system_namespace }}"

function create_secret() {
  local application="$1"
  local secret_name="$2"
  local tls_file_prefix="$3"
  if [[ "{{ recreate_secret }}" == "true" ]]; then
    $KUBECTL delete secret "${secret_name}" -n "${namespace}" --ignore-not-found=true
    echo "${secret_name} deleted from namespace ${namespace}"
  fi

  local additional_ingress=$(get_additional_ingress)

  secret=$($KUBECTL get secret "${secret_name}" -n "${namespace}" --ignore-not-found)
  if [[ "$secret" ]]; then
    $KUBECTL get secret "${secret_name}" -n "${namespace}" -o=jsonpath="{.data.tls\.crt}" | base64 -d >"./${tls_file_prefix}.crt"
    issuer=$(openssl x509 -in "./${tls_file_prefix}.crt" -noout -issuer)
    expected_issuer="issuer=CN = $cluster_service_domain"

    additional_ingress_in_tls=true
    if [[ -n "$additional_ingress" ]]; then
      if ! openssl x509 -in "./${tls_file_prefix}.crt" -noout -ext subjectAltName | grep "$additional_ingress.$service_domain" >/dev/null; then
        additional_ingress_in_tls=false
      fi
    fi
    if [[ "$issuer" == $expected_issuer* ]] && $additional_ingress_in_tls; then
      echo "${secret_name} already exists in namespace ${namespace}"
      return
    else
      $KUBECTL delete secret "${secret_name}" -n "${namespace}" --ignore-not-found=true
      if [[ "$issuer" != $expected_issuer* ]]; then
        echo "${secret_name} deleted from namespace ${namespace} since issuer is different: '$issuer' vs '$expected_issuer'"
      else
        echo "${secret_name} deleted from namespace ${namespace} since additional ingress is not present in the cert: '$additional_ingress.$service_domain'"
      fi
    fi
  fi

  mgmt_host="localhost"
  if [[ "{{ is_kind_cluster }}" == "false" ]]; then
    mgmt_host=$(hostname)
  fi
  sed "s/{mgmt_node_hostname}/$mgmt_host/g" <./ssl.conf.template >./${tls_file_prefix}.ssl.conf
  sed -i -e "s/{application}/$application/g" ./${tls_file_prefix}.ssl.conf
  sed -i -e "s/{cluster_service_domain}/$cluster_service_domain/g" ./${tls_file_prefix}.ssl.conf
  sed -i -e "s/{service_domain}/$service_domain/g" ./${tls_file_prefix}.ssl.conf
  if [[ -n "$additional_ingress" ]]; then
    sed -i -e "s/{dns_for_additional_ingress}/DNS.7=$application.$additional_ingress.$service_domain/g" ./${tls_file_prefix}.ssl.conf
  else
    sed -i -e "s/{dns_for_additional_ingress}//g" ./${tls_file_prefix}.ssl.conf
  fi
  openssl req -x509 -newkey rsa:4096 -sha256 -days 3650 -nodes \
    -keyout "./${tls_file_prefix}.key" \
    -out "./${tls_file_prefix}.crt" \
    -config ./${tls_file_prefix}.ssl.conf
  chmod a+r "./${tls_file_prefix}.key"
  $KUBECTL create secret tls "${secret_name}" \
    --key "./${tls_file_prefix}.key" \
    --cert "./${tls_file_prefix}.crt" \
    -n "${namespace}"
  rm -f "./${tls_file_prefix}.key"
  echo "${secret_name} created in namespace ${namespace}"
}

create_secret "debug-viz" "ebugviz-server-grpc-secret" "debugviz-tls"