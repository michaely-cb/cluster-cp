#!/usr/bin/env bash

SCRIPT_PATH=$(dirname "$0")
cd "$SCRIPT_PATH"
source "../pkg-common.sh"

# Deploy webhook admission registration to kind clusters for testing purposes
if ! has_multiple_mgmt_nodes && ! [ -d /kind ]; then
  echo "Skip deploying webhook admission registration"
  exit 0
fi

set -e

deploy() {
  secret_name="kube-webhook"
  secret_namesapce="kube-system"
  TLS_CRT=$(kubectl -n ${secret_namesapce} get secret ${secret_name} -o jsonpath='{.data.tls\.crt}' --ignore-not-found)

  if [ -z "${TLS_CRT}" ]; then
    echo "ERROR: Secret ${secret_name} does not exist in ${secret_namesapce}."
    echo "Please deploy the kube-webhook app before proceeding."
    exit 1
  fi

  TLS_CRT=${TLS_CRT} \
    envsubst < webhook-config-template.yaml > webhook-config.yaml

  kubectl apply -f webhook-config.yaml
}

validate() {
  # Validates the webhook is working correctly by creating a no-op pod and
  # checking that the pod got scheduled to a kafka-labeled node with largest hostname value.

  kubectl create ns kafka &>/dev/null || true
  kubectl delete pod -n kafka kafka-webhook-validate --ignore-not-found &>/dev/null || true
  cat <<EOF | kubectl apply -f-
apiVersion: v1
kind: Pod
metadata:
  namespace: kafka
  name: kafka-webhook-validate
  labels:
    statefulset.kubernetes.io/pod-name: kafka
spec:
  containers:
  - name: main
    image: registry.local/busybox:1.34.1
    command: ["sleep", "3600"]
EOF
  if ! kubectl wait --for=condition=ready pod/kafka-webhook-validate --timeout=30s -n kafka; then
    echo "error: failed to launch webhook validation pod" >&2
    exit 1
  fi
  target_node=$(kubectl get nodes --no-headers -l kafka-node= | awk '{print $1}' | sort -h | tail -1)
  scheduled_node=$(kubectl -n kafka get pod kafka-webhook-validate -o=jsonpath='{.spec.nodeName}')
  if [ "$scheduled_node" != "$target_node" ] || [ -z "$scheduled_node" ] ; then
    echo "error: failed to validate webhook, expected the pod to land on $target_node, but it landed on $scheduled_node" >&2
    exit 1
  fi
  kubectl delete pod -n kafka kafka-webhook-validate
}

deploy
validate
