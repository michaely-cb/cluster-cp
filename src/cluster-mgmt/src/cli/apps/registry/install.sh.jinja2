#!/usr/bin/env bash
set -e

SCRIPT_PATH=$(dirname "$0")
cd "$SCRIPT_PATH"
source "registry-functions.sh"
export registry_image="{{ registry_image }}"

mkdir -p /n0/cluster-mgmt/registry-logs && chmod 755 /n0/cluster-mgmt/registry-logs
mkdir -p /n0/cluster-mgmt/registry && chmod 755 /n0/cluster-mgmt/registry
mkdir -p "${CERTS_DIR}"

clean_up_stale_registry
if is_static_registry; then
  echo "installing static-registry..."
  registry_host_ips=$MGMT_NODE_DATA_IP
else
  if has_multiple_mgmt_nodes; then
    data_vip=$(get_data_vip)
    if [ -z "${data_vip}" ]; then
      echo "data_vip is empty but required for multi-mgmt node registry setup"
      exit 1
    fi
    # add mirrors
    registry_host_ips="${data_vip} $(get_controlplane_data_ips | xargs)"
  else
    registry_host_ips="$MGMT_NODE_DATA_IP"
  fi

  echo "installing private-registry daemonset with hosts $registry_host_ips"
fi

# if install/upgrade case without new nodes and the installer image is available
if ! is_incremental_deploy && check_image_in_registry alpine-containerd latest; then
  # Upgrade an already-running cluster with no new nodes.
  # Every existing node has some version of nerdctl. Use the installer to check for updates.
  update_containerd_certs lead_node_only $registry_host_ips
  registry_host_ips=$(echo $registry_host_ips | tr ' ' ,) # env doesn't handle spaces in args well
  installer_rollout_wait_or_warn installers registry-installer ./registry-installer.sh 180 notready_ok CERTS_DIR=$CERTS_DIR REGISTRY_IPS=$registry_host_ips
else
  # for new deploy without installer image or incremental deploy
  # for the incremental case, the PSSH call will only connect to new nodes.
  update_containerd_certs pssh_all $registry_host_ips
fi

if is_static_registry; then
  # always deploy the static registry even if incremental since it's idempotent
  bash static-registry.sh
else
  if is_incremental_deploy; then
    exit 0
  fi
  bash private-registry.sh
fi
