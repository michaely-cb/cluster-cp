# Generated by deployment-manager
# Do not edit this file! Changes will be overwritten.
# Instead, add a file such as /etc/dnsmasq.d/cluster.conf if
# customization for this cluster is needed.

# do not forward AAAA or A queries for host lookups
domain-needed

# do not forward reverse dns queries for private ranges if not found in /etc/hosts
bogus-priv

# upstream DNS servers
{% for upstream in config.dns_servers %}
server={{ upstream }}
{% endfor %}

# do not forward requests for queries in {{ config.domain }}, only serve locally from /etc/hosts and hosts entries
local=/{{ config.domain }}/

# only accept dns requests from IPs on a network for one of dnsmasq's interfaces
local-service

{% for interface in config.listen_interfaces %}
interface={{ interface }}
{% endfor %}

# in addition to the interface, we need to listen on the IP address since
# locally running k8 pods do not send traffic on the interface
listen-address={{ config.ip }}

# restrict dhcp requests to requesting names in {{ config.domain }}
domain={{ config.domain }}

# limit the maximum number of leases issued
dhcp-lease-max=5000

expand-hosts

# allow additional configs
conf-dir=/etc/dnsmasq.d

# allow specifying hosts without modifying system's /etc/hosts file
hostsdir=/etc/hosts.d

# tag cerebras MAC pattern as cs2
dhcp-mac=set:cs2,70:55:f8:*:*:*

# static configs for pxe chainloading
dhcp-match=set:ipxe,175
dhcp-option=tag:type_sr,tag:!ipxe,67,"undionly.kkpxe"
dhcp-option=tag:type_sr,tag:ipxe,67,"boot-rocky.ipxe"

{% if config.tftp_path %}
### tftp ###
enable-tftp
tftp-root={{ config.tftp_path }}
{% endif %}

### global dhcp options ###
dhcp-option=6,{% if config.ip %}{{ config.ip }}{% endif %}  # dns
dhcp-option=42,{{ config.ntp_servers | join(",") }}  # ntp
dhcp-option=66,{{ config.ip }}  # tftp
{% macro fmt_dhcp_options(o, tag) %}
  {% if tag %}
    {% set prefix = "tag:" + tag + "," %}
  {% else %}
    {% set prefix = "" %}
  {% endif %}
  {% for code, value in o | dictsort %}
dhcp-option={{ prefix }}{{ code }},"{{ value }}"
  {% endfor %}
{% endmacro %}
{% macro generate_tags(host) -%}
  {% set tags = "set:" ~ host.client_class %}
  {% if host.dhcp_options %}
    {% set tags = tags ~ ",set:" ~ host.hostname %}
  {% endif %}
  {{- tags -}}
{%- endmacro %}

{% for mac_tag in config.mac_tags %}
dhcp-mac=set:{{mac_tag.set_tag}},{{mac_tag.mac}}
{% endfor %}

### subnets ###
{% for subnet in config.subnets %}

# subnet {{ subnet.name }}
{% if subnet.has_static %}
dhcp-range=set:{{ subnet.name }},{{ subnet.subnet.network_address }},static,{{ subnet.subnet.netmask }},{% if subnet.lease_duration %}{{ subnet.lease_duration }}{% else %}{{ config.default_reserved_lease_duration }}{% endif %}

{% endif %}
{% if subnet.dynamic_range %}
dhcp-range=set:{{ subnet.name }},{{ subnet.dynamic_range.start_ip }},{{ subnet.dynamic_range.end_ip }},{{ subnet.subnet.netmask }},{{ subnet.subnet.broadcast_address }},{{ config.default_dynamic_lease_duration }}{% if subnet.dynamic_range.comment != "" %} # {{ subnet.dynamic_range.comment }}{% endif %}

{% endif %}
{% if subnet.gateway %}
dhcp-option=tag:{{ subnet.name }},3,{{ subnet.gateway }}  # gateway
{% endif %}
{% for host in subnet.hosts %}
{% if host.mac or host.dns_name %}
{% if host.dhcp_options %}
{{ fmt_dhcp_options(host.dhcp_options, host.hostname) -}}
{% endif %}
{% if host.dhcp_vs_options %}
dhcp-option=tag:{{ host.hostname }},43,{{ host.encode_vs_options(True) }}
{% endif %}
{% set tags = generate_tags(host) %}
dhcp-host={%- if tags -%}{{ tags }},{%- endif -%}{{ host.fmt_tags() }}{{ host.mac if host.mac else host.dns_name }}{{ "," if (host.mac or host.dns_name) and host.ip }}{{ host.ip }}{{ "," + host.hostname if host.hostname }}
{% endif %}
{% endfor %}
{% endfor %}
