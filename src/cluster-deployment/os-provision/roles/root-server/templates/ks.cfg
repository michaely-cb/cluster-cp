#version=RHEL8
text

%pre --interpreter=/usr/bin/bash --log=/root/preinstall.log

set -e
set -o pipefail

FILE_SRV={{ dhcp_ip }}
BOOT_DEVICE=
BOOT_MOUNT_PART=

NVME_COUNT=$(ls /sys/block | grep -c '^nvme')

# Check if the device exists and it is not a removable device like a USB flash
# drive.
is_bootable_device() {
  local dev_name
  dev_name=$(basename "$1")
  [[ -b "$1" && $(cat "/sys/block/$dev_name/removable") -eq 0 ]]
}

# Simple checks to ensure we deploy the OS image to the right boot drive.
# This is not foolproof though, as we may have drives that are not seated
# properly.
# The clean way is for the caller to specify the boot drive.

if is_bootable_device /dev/sda ; then
  BOOT_DEVICE=/dev/sda
  BOOT_MOUNT_PART=/dev/sda1
# Check if the NVMe block device /dev/nvme0n1 exists, and as a simple heuristic,
# that the number of NVMe devices is not 3, which is the case for RAID setup.
# This needs to be refined once we have better idea of the new server config.
elif is_bootable_device /dev/nvme0n1 && [[ $NVME_COUNT -ne 3 ]]; then
  BOOT_DEVICE=/dev/nvme0n1
  BOOT_MOUNT_PART=/dev/nvme0n1p1
else
  echo "ERROR: non-removable device /dev/sda and /dev/nvme0n1 not found. Aborting installation." >&2
  # Sleep for 10 mins, allowing the user to log in to IMPI console to see this
  # error message.
  sleep 600
  # Shutdown the machine to prevent forever reboot looping.
  shutdown -h now
  exit 1
fi

echo "copying OS image to $BOOT_DEVICE"
/bin/wget "http://$FILE_SRV:8080/rocky8-base.tar.gz" -O - | tar -xOzf - | /bin/dd of=${BOOT_DEVICE} bs=1M
sync

mount "$BOOT_MOUNT_PART" /mnt/

# Force a time sync before recording the install time.
# Get the IP of our deploy node from any BOOTP/DHCP lease
time_source=$(grep next-server /run/NetworkManager/devices/* | head -n 1 | cut -d '=' -f 2)
# Force an immediate time sync
chronyd -q "server $time_source iburst"

/bin/date > /mnt/os-install-time
cp /root/preinstall.log /mnt/preinstall.log
/sbin/reboot
%end
