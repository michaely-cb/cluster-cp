---
- name: Install ypbind
  yum: name=ypbind state=installed
  tags: ypbind

- name: Install bind-utils
  yum: name=bind-utils state=installed
  tags: ypbind

- name: NIS configuration
  template: src=etc/yp.conf.j2 dest=/etc/yp.conf
  notify: restart ypbind
  tags: ypbind

- name: Setup nsswitch.conf
  template: src=etc/nsswitch.conf.j2 dest=/etc/nsswitch.conf backup=yes
  notify: restart ypbind
  tags: ypbind

# authselect files that changed in F28 (should be the same in prior versions)
# F28 moved to authselect but didn't create a profile for NIS, breaking NIS - restoring the
# authselect files from F27 fixes this according to
# https://bugzilla.redhat.com/show_bug.cgi?id=1575297#c19
- name: Copy over /etc/authselect/password-auth
  template: src=etc/authselect/password-auth dest=/etc/authselect/password-auth backup=yes
  when: "ansible_distribution == 'Fedora' and ansible_distribution_major_version == '28'"
  notify: restart ypbind
  tags: ypbind

- name: Copy over /etc/authselect/system-auth
  template: src=etc/authselect/system-auth dest=/etc/authselect/system-auth backup=yes
  when: "ansible_distribution == 'Fedora' and ansible_distribution_major_version == '28'"
  notify: restart ypbind
  tags: ypbind

- name: Set NFS ID map domain
  lineinfile:
    path: /etc/idmapd.conf
    regexp: "^#Domain ="
    line: "Domain = cerebrassc.local"
  tags: ypbind

- name: Apply domain change
  shell: nfsidmap -c
  tags: ypbind

- name: NIS enable on boot
  service: name={{ item }} state=started enabled=yes
  tags: ypbind
  with_items: [rpcbind,ypbind]

- name: Add sudoers
  template: src=etc/sudoers.d/99-cerebras-users dest=/etc/sudoers.d/99-cerebras-users backup=yes
  tags:
    - sudoers
    - ypbind

# Set up sshd access control
# NOTE:
# - sshd processes rules in the following order: DenyUsers, AllowUsers, DenyGroups, AllowGroups
# - a user must pass ALL rules for login; that is, the user and all their groups must not be in the
#   deny lists, AND the user and at least one of its groups must be in the allow lists, if allow
#   lists are defined
- block:
  - name: Clear DenyUsers if not set
    lineinfile:
      regexp: "^\\s*#*\\s*DenyUsers.*"
      path: /etc/ssh/sshd_config
      state: absent
    when: "sshd.deny_users is not defined"
    notify: reload sshd

  - name: Add DenyUsers to sshd config
    lineinfile:
      regexp: "^\\s*#*\\s*DenyUsers.*"
      path: /etc/ssh/sshd_config
      line: "DenyUsers {{ sshd.deny_users }}"
    when: "sshd.deny_users is defined"
    notify: reload sshd

  - name: Clear AllowUsers if not set
    lineinfile:
      regexp: "^\\s*#*\\s*AllowUsers.*"
      path: /etc/ssh/sshd_config
      state: absent
    when: "sshd.allow_users is not defined"
    notify: reload sshd

  - name: Add AllowUsers to sshd config
    lineinfile:
      regexp: "^\\s*#*\\s*AllowUsers.*"
      path: /etc/ssh/sshd_config
      line: "AllowUsers {{ sshd.allow_users }}"
    when: "sshd.allow_users is defined"
    notify: reload sshd

  - name: Clear DenyGroups if not set
    lineinfile:
      regexp: "^\\s*#*\\s*DenyGroups.*"
      path: /etc/ssh/sshd_config
      state: absent
    when: "sshd.deny_groups is not defined"
    notify: reload sshd

  - name: Add DenyGroups to sshd config
    lineinfile:
      regexp: "^\\s*#*\\s*DenyGroups.*"
      path: /etc/ssh/sshd_config
      line: "DenyGroups {{ sshd.deny_groups }}"
    when: "sshd.deny_groups is defined"
    notify: reload sshd

  - name: Clear AllowGroups if not set
    lineinfile:
      regexp: "^\\s*#*\\s*AllowGroups.*"
      path: /etc/ssh/sshd_config
      state: absent
    when: "sshd.allow_groups is not defined"
    notify: reload sshd

  - name: Add AllowGroups to sshd config
    lineinfile:
      regexp: "^\\s*#*\\s*AllowGroups.*"
      path: /etc/ssh/sshd_config
      line: "AllowGroups {{ sshd.allow_groups }}"
    when: "sshd.allow_groups is defined"
    notify: reload sshd

  - name: Check config
    shell: sshd -t

  when: "sshd is defined"
  tags: ypbind, sshd
