- name: Copy remove RAID script
  copy:
    src: remove-raid.sh
    dest: /tmp/remove-raid.sh
    mode: 0700
  tags: clean-raid

- name: Determine RAID devices
  # Need to filter out NVMe boot disk, if any
  # Typically nvme0n1 nvme1n1 nvme2n1
  shell: lsblk -d | awk '{print $1}' | grep nvme | grep -v $(lsblk -no PKNAME $(df /boot | awk 'NR==2 {print $1}')) | sort
  register: raid_devices
  tags: raid

- name: Run RAID remove script
  command: bash /tmp/remove-raid.sh
  environment:
    RAID_MOUNTPOINT: "{{ raid_name }}"
    RAID_MEMBER_DISKS: "{{ raid_devices.stdout_lines | join(' ') }}"
  tags: raid

- name: Copy RAID create script
  copy:
    src: create-raid.sh
    dest: /tmp/create-raid.sh
    mode: 0700
  tags: raid

- name: Run RAID create script
  command: /tmp/create-raid.sh
  environment:
    RAID_MOUNTPOINT: "{{ raid_name }}"
    RAID_MEMBER_DISKS: "{{ raid_devices.stdout_lines | join(' ') }}"
  args:
    creates: "/dev/md127"
  tags: raid
  when:
    - group_names is not search("MX")
    - group_names is not search("SX")
    - group_names is not search("AX")
    - group_names is not search("IX")
    - group_names is not search("MG")
    - inventory_hostname != management_node

- name: Mount RAID
  mount:
    src: "/dev/md127"
    path: "/{{ raid_name }}"
    fstype: xfs
    state: mounted
  tags: raid
  when:
    - group_names is not search("MX")
    - group_names is not search("SX")
    - group_names is not search("AX")
    - group_names is not search("IX")
    - group_names is not search("MG")
    - inventory_hostname != management_node

- name: Run RAID create script
  command: /tmp/create-raid.sh
  environment:
    RAID_MOUNTPOINT: "{{ raid_name }}"
    RAID_MEMBER_DISKS: "{{ raid_devices.stdout_lines | join(' ') }}"
  args:
    creates: "/dev/md127"
  when:
    - inventory_hostname == management_node
    - single_mgmt == True

- name: Mount RAID
  mount:
    src: "/dev/md127"
    path: "/{{ raid_name }}"
    fstype: xfs
    state: mounted
  tags: raid
  when:
    - inventory_hostname == management_node
    - single_mgmt == True