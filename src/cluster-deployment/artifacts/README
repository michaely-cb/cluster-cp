# Artifact Bundler

Artifact bundler is a simple tool to create a tar file containing arbitrary artifacts needed for cluster deployment but
not included in a Cerebras build. This includes
- switch firmware
- nic firmware
- binaries
- os images
- etc.

## Manifests

A manifest corresponds to a component in the Cerebras build. We logically group artifacts that are typically changed
for a common reason. E.g. the OS image is grouped with the security patches as they are built together.

There are 2 manifests today:
- cluster_deployment/artifacts/manifest.yaml
- cluster_deployment/os-build/manifest.yaml

The cluster_deployment/Makefile has the rules to build the tarballs for the release.

## Artifacts

A manifest is a list of artifacts. Each artifact has a kind and some artifacts have names and/or properties that are
meaningful to the deployment manager. It uses these fields to install them at the correct places on the deploy node.

At the moment, deploy-artifacts.cerebrassc.local hosts artifacts but the manifest can point to http:// or file://
URLs as well.

# Usage

Note: this must be executed in a network with access to the deployment build server or else pass in `--server HOSTNAME`
to override the default deployment artifacts server (deploy-artifacts.cerebrassc.local)

Check if the manifest file is valid:

    ./bundler.py verify manifest.yaml

Create a tar file with the artifacts:

    ./bundler.py bundle manifest.yaml --output artifacts.tar.gz --release x.y.z --buildid 0123abcd

## Updating Manifests

If adding new artifacts, simply add or update them in the manifest.yaml file in this directory and ensure the artifact
exists on the build http server at the specified path by running the verify command.

The nightly build will produce a new tar file with the updated artifacts under /cb/artifacts/builds/cluster/.